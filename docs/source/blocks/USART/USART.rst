USART接口控制器（USART）
------------------------

概述
~~~~

USART 除了支持普通UART的功能外，还支持更完善的LIN功能。

特性
~~~~

-  5-9位数据，1、1.5或2位停止位

-  奇偶校验位发送和检测，帧错误检测，溢出错误检测

-  支持先发送高位、或先发送低位可配

-  支持接收超时中断、超时时间可配

-  LIN支持主/从模式，遵循LIN 1.3和LIN 1.2协议规格

-  LIN从机模式支持自同步功能

功能描述
~~~~~~~~

字符格式
^^^^^^^^

|image1|

空闲时通信线保持高电平，以低电平的起始位启动一个字符的传输，其后紧跟5-9位的数据位、可选的奇偶校验位、1-2位固定高电平的停止位。接收方和发送方必须设定完全相同的字符格式，且每位的宽度必须相同（误差不超过3%），才能正确通信。

接收器和发送器控制
^^^^^^^^^^^^^^^^^^

复位后，接收器被禁用。用户必须通过设置控制寄存器 (USART_CR) 中的 RXEN
位来启用接收器。但是，可以在启用接收器时钟之前对接收器寄存器进行编程。

复位后，发送器被禁用。用户必须通过设置控制寄存器 (USART_CR) 中的 TXEN
位来启用它。但是，可以在启用之前对发送器寄存器进行编程。

接收器和发送器可以一起启用或单独启用。

在任何时候，软件都可以通过在 USART_CR 中分别设置相应的位 RSTRX 和 RSTTX
对 USART
的接收器或发送器执行复位。软件复位会清除状态标志并复位内部状态机，但用户界面配置寄存器会保存软件复位前配置的值。无论接收器或发送器正在执行什么操作，通信都会立即停止。

用户还可以通过在 USART_CR 中分别设置 RXDIS 和 TXDIS
来单独禁用接收器或发送器。如果在字符接收期间禁用接收器，USART
将等待直到当前字符接收结束，然后停止接收。如果在操作期间禁用发送器，USART
将等待当前字符和存储在发送保持寄存器 (US_THR) 中的字符的传输结束。

发送器操作
^^^^^^^^^^

在编程的串行时钟的每个下降沿，一个起始位、最多 9
个数据位、一个可选奇偶校验位和最多两个停止位依次从 TXD 引脚移出。

数据位数由模式寄存器 (USART_MR) 中的 NBDATA 字段和 DATA9b
位选择。通过设置 DATA9b 位来选择九位，而不管 NBDATA 字段如何。

奇偶校验位根据 USART_MR 中的 PARITY
字段设置。可以配置偶校验位、奇校验位、空格校验位、标记校验位或无校验位。USART_MR
中的 MSBF 字段配置首先发送哪个数据位。如果写入
1，则首先发送最高有效位。如果写入 0，则首先发送最低有效位。停止位数由
USART_MR 中的 NBSTOP 字段选择。

字符通过写入发送保持寄存器 (USART_THR) 来发送。发送器通过USART_ISR
中的如下两个状态位报告发送状态：TXRDY（发送器就绪）表示 USART_THR
为空，可以写入新的数据发送；TXEMPTY，表示已处理写入 USART_THR
的所有字符。

|image2|

当前字符处理完成后，写入 USART_THR
的最后一个字符将传输到发送器的移位寄存器中，USART_THR 变为空，因此 TXRDY
上升。在 TXRDY 为低时向 USART_THR
写入字符不会产生任何影响，写入的字符将丢失。

接收器操作
^^^^^^^^^^

USART接收器对 RXD 输入线进行过采样，过采样是波特率时钟的 16 倍或 8
倍，具体取决于 USART_MR 中的 OVER8 位。

如果过采样为 16（OVER8 =
0），则在检测到0后第八个采样时检测到一个起始位。然后，在每个 16
个采样时钟周期对数据位、奇偶校验位和停止位进行采样。如果过采样为8（OVER8
= 1），则在检测到0后第四个采样时检测到一个起始位。然后，在每个 8
个采样时钟周期对数据位、奇偶校验位和停止位进行采样。

数据位数、发送的第一个位和奇偶校验模式由与发送器相同的字段和位选择，即分别为
NBDATA、DATA9b、MSBF 和
PARITY。一旦对停止位进行采样，接收器就会开始寻找新的起始位，这样当发送器以一个停止位运行时也可以完成重新同步。

**USART Start Detection (x16)**

|image3|

第二个波形中，在第八个采样点检测到了高电平，因此起始位检测失败。

当字符接收完成时，它将被传输到接收保持寄存器(USART_RHR)，并且 USART_ISR
中的 RXRDY 位置位。如果在字符接收完成时 RXRDY 已经置位，则设置
OVRE（溢出错误）位。最后一个字符将传输到USART_RHR
并覆盖前一个字符。通过向USART_CR.RSTSTA（复位状态）位写入1可以清除 OVRE
位。

LIN报头传输（主节点配置）
^^^^^^^^^^^^^^^^^^^^^^^^^

所有 LIN
帧都以主节点发送的报头开始，该报头由同步中断字段、同步字段和标识符字段组成。

在主节点配置中，帧处理从发送报头开始。

标识符写入 LIN 标识符寄存器 (USART_LINID) 后，报头立即传输。此时，TXRDY
标志清零。

中断字段、同步字段和标识符字段自动相继发送。

中断字段由 13 个显性位和 1 个隐性位组成，同步字段为字符
0x55，标识符对应于 LIN 标识符寄存器 (US_LINID)
中写入的字符。标识符奇偶校验位可以自动计算和发送。

当标识符字符传输到发送器的移位寄存器时，TXRDY 标志置位。

一旦传输了同步中断字段，USART_ISR 中的标志 BRK 就会设置为
1。同样，一旦发送了标识符字段，USART_ISR 中的标志位 ID 就会设置为
1。通过将 1 写入USART_CR 中的 RSTSTA 位来重置这些标志。

|image4|

LIN报头接收（从节点配置）
^^^^^^^^^^^^^^^^^^^^^^^^^

所有 LIN
帧都以主节点发送的报头开始，该报头由同步中断字段、同步字段和标识符字段组成。

在从节点配置中，帧处理从接收报头开始。

USART 使用实际波特率下 11
个标称位时间的中断检测阈值。在任何时候，如果在总线上检测到 11
个连续的隐性位，则 USART 检测到中断字段。只要没有检测到中断字段，USART
就会保持空闲状态，并且不会考虑接收到的数据。

当检测到中断字段时，USART_ISR 中的标志 BRK 设置为 1，并且 USART
期望同步字段字符为
0x55。此字段用于更新实际波特率以保持同步。如果接收到的同步字符不是
0x55，则会产生不一致同步字段错误。

接收到同步字段后，USART 期望接收标识符字段。

接收到标识符字段后，USART_ISR 中的标志位 ID 设置为 1。此时，LINID
中的字段 IDCHR
将使用接收到的字符进行更新。标识符奇偶校验位可以自动计算和检查。

如果未在报头最大长度 THeader_Maximum 给出的时间内完全接收到报头，则
USART_ISR 中的错误标志 HDRTO 设置为 1。

通过将 1 写入USART_CR 中的 RSTSTA 位，可以重置标志位 BRK、ID 和 HDRTO。

|image5|

LIN从节点同步
^^^^^^^^^^^^^

同步仅在从节点配置中完成。该过程基于同步场下降沿之间的时间测量。下降沿的距离为
2、4、6 和 8 位时间。

|image6|

时间测量由 19 位计数器进行，该计数器由采样时钟计时。

当检测到同步场的起始位时，计数器将重置。然后在同步场的下一个 8 Tbits
期间，计数器将递增。在这 8 Tbits 结束时，计数器将停止。此时，计数器的 16
个最高有效位（值除以 8）给出新的时钟分频器（IDIV），该值的 3
个最低有效位（余数）给出新的小数部分（FDIV）。

如果采样的同步字符不等于 0x55，则USART_ISR中的错误标志 SYNCERR 设置为
1。通过在USART_CR 中将 RSTSTA 位写入 1 来重置它。

一旦完全接收到同步字段，如果 LIN 模式寄存器 (USART_LINMR) 中的 SYNCDIS
位未禁用同步，则USART_BAUD中的时钟分频器 (IDIV) 和小数部分 (FDIV)
将使用计算值更新。

接收到同步字段后：

• 如果与初始波特率相比，计算出的波特率偏差大于最大容差 FTol_Unsynch
(±15%)，则USART_BAUD 不会更新，并且USART_ISR 中的错误标志 SYNCTERR
设置为 1。

• 如果采样的同步字符似乎不等于 0x55，则USART_BAUD
不会更新，并且USART_ISR 中的错误标志 SYNCERR 设置为 1。

通过将USART_CR中的 RSTSTA 位写入 1 来重置标志 SYNCERR 和 SYNCTERR。

LIN ID奇偶校验
^^^^^^^^^^^^^^

受保护的标识符由两个子字段组成；标识符和标识符奇偶校验。位 0 至 5
分配给标识符，位 6 和 7 分配给奇偶校验。

USART 接口可以生成/检查这些奇偶校验位，但此功能也可以禁用。用户可以通过
LIN 模式寄存器 (USART_LINMR) 的 PARDIS 位在两种模式之间进行选择：

• PARDIS = 0：

– 在报头传输期间，计算奇偶校验位并与 LIN 标识符寄存器 (US_LINIR) 的
IDCHR 字段的 6 个最低有效位一起发送。此寄存器的位 6 和 7 被丢弃。

–
在报头接收期间，检查标识符的奇偶校验位。如果奇偶校验位错误，则发生标识符奇偶校验错误。只有
IDCHR 字段的 6 个最低有效位会使用接收到的标识符进行更新。位 6 和位 7
固定为 0。

• PARDIS = 1：

– 在报头传输期间，LIN 标识符寄存器 (US_LINIR) 的 IDCHR
字段的所有位均在总线上发送。

– 在报头接收期间，IDCHR 字段的所有位均使用接收到的标识符进行更新。

LIN节点动作
^^^^^^^^^^^

根据标识符的功能，节点是否关注 LIN
响应。因此，在发送或接收标识符后，必须配置 USART。有三种可能的配置：

• PUBLISH：节点发送响应。

• SUBSCRIBE：节点接收响应。

• IGNORE：节点不关注响应，它不发送也不接收响应。

此配置由 US_LINMR 寄存器中的字段“节点动作 (NACT)”完成。

示例：包含一个主设备和两个从设备的 LIN 集群：

• 数据从主设备传输到从设备 1 和从设备 2：

NACT(主设备)=PUBLISH

NACT(从设备 1)=SUBSCRIBE

NACT(从设备 2)=SUBSCRIBE

• 数据仅从主设备传输到从设备 1：

NACT(主设备)=PUBLISH

NACT(从设备 1)=SUBSCRIBE

NACT(从设备 2)=IGNORE

• 数据从从设备 1 传输到主设备：

NACT(主设备)=SUBSCRIBE

NACT(从设备 1)=PUBLISH

NACT(从设备 2)=IGNORE

• 数据从从设备 1 传输到从设备 2：

NACT(主设备)=IGNORE

NACT(从设备 1)=PUBLISH

NACT(从设备 2)=SUBSCRIBE

• 数据从从设备 2 传输到从设备 1：从属设备 2 到主设备以及从属设备 1：

NACT(主设备)=SUBSCRIBE

NACT(从属设备 1)=SUBSCRIBE

NACT(从属设备 2)=PUBLISH

.. |image1| image:: media/image2.emf
.. |image2| image:: media/image3.emf
.. |image3| image:: media/image4.emf
.. |image4| image:: media/image5.emf
.. |image5| image:: media/image6.emf
.. |image6| image:: media/image7.emf
