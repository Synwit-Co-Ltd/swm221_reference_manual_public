**1.1 MPU接口（MPU）**
----------------------

**1.1.1概述**
~~~~~~~~~~~~~

本系列所有型号MPU模块操作均相同。使用前需使能MPU模块时钟。

**1.1.2特性**
~~~~~~~~~~~~~

-  8位MPU数据接口位宽

-  支持MPU接口

   -  接口时序可调

   -  输出时钟可配置为空闲时关闭

   -  通过MCU或者DMA工作

**1.1.3模块结构框图**
~~~~~~~~~~~~~~~~~~~~~

|image1|

图 1‑1 MPU模块结构框图

**1.1.4功能描述**
~~~~~~~~~~~~~~~~~

**数据接口**
^^^^^^^^^^^^

MPU模块包括RD、WR、RS、CS、DATA等控制接口。使用时将相关GPIO功能设置为MPU模块接口信号。

如表格 1‑2所示：

表格 1‑2 MPU模块数据接口

.. list-table::
   :widths: 14 12 46

   - 

      - **信号名称**
      - **信号方向**
      - **功能**
   - 

      - **RD**
      - O
      - MPU：I80接口下RD信号
   - 

      - **WR**
      - O
      - MPU：I80接口下WR信号，M68接口下E信号
   - 

      - **RS**
      - O
      - MPU：I80、M68接口下RS信号
   - 

      - **CS**
      - O
      - MPU：I80接口下CS信号，M68接口下CS、RW信号
   - 

      - **DATA**
      - I/O
      - MPU接口数据输出

**接口时序**
^^^^^^^^^^^^

MPU接口时序如图 1‑3所示：

|image2|

图 1‑3 MPU接口时序图

Tas周期从CS下降沿到WR下降沿，为地址建立时间；

Tpwlw周期从WR下降沿到上升沿，为WR操作脉冲宽度；

Tah周期从WR上升沿到CS上升沿，为地址保持时间；

Ttail周期从CS上升沿到CS下降沿，为与下次选通之间的时差。

**操作说明**
^^^^^^^^^^^^

-  配置CR寄存器，设置参数

-  CPU写IR寄存器，配置待访问寄存器地址

-  CPU写DR寄存器，写入数据，或者CPU读DR寄存器，接收数据

-  查询BUSY状态位为0，表示一个数据传输结束

如果使用DMA操作，需要先使能SR寄存器中的DMAEN位，然后根据写入或读出，将DR寄存器地址配置为DMA模块的目标地址或源地址，再启动DMA模块的操作

**
**

**1.1.5寄存器映射**
~~~~~~~~~~~~~~~~~~~

.. list-table::
   :widths: 13 8 6 12 33

   - 

      - **名称**
      - **偏移**
      - **类型**
      - **复位值**
      - **描述**
   - 

      - **MPU BASE：0x40050000**
      - 
      - 
      - 
      - 
   - 

      - **SR**
      - 0x8
      - RW
      - 0
      - 启动传输寄存器
   - 

      - **CR**
      - 0x0C
      - RW
      - 0
      - 参数控制寄存器
   - 

      - **IR**
      - 0x10
      - R/W
      - 0
      - 指令寄存器
   - 

      - **DR**
      - 0x14
      - R/W
      - 0
      - 数据寄存器

**1.1.6寄存器描述**
~~~~~~~~~~~~~~~~~~~

启动传输寄存器SR
^^^^^^^^^^^^^^^^

.. list-table::
   :widths: 12 9 6 12 33

   - 

      - **寄存器**
      - **偏移**
      - **类型**
      - **复位值**
      - **描述**
   - 

      - **SR**
      - 0x8
      - RW
      - 0
      - 启动传输寄存器

.. list-table::
   :widths: 9 9 9 9 9 9 9 9

   - 

      - **31**
      - **30**
      - **29**
      - **28**
      - **27**
      - **26**
      - **25**
      - **24**
   - 

      - -
      - 
      - 
      - 
      - 
      - 
      - 
      - 
   - 

      - **23**
      - **22**
      - **21**
      - **20**
      - **19**
      - **18**
      - **17**
      - **16**
   - 

      - -
      - 
      - 
      - 
      - 
      - 
      - 
      - 
   - 

      - **15**
      - **14**
      - **13**
      - **12**
      - **11**
      - **10**
      - **9**
      - **8**
   - 

      - -
      - 
      - 
      - 
      - 
      - 
      - 
      - 
   - 

      - **7**
      - **6**
      - **5**
      - **4**
      - **3**
      - **2**
      - **1**
      - **0**
   - 

      - -
      - 
      - 
      - 
      - ENDIAN
      - 
      - DMAEN
      - BUSY

.. list-table::
   :widths: 7 15 50

   - 

      - **位域**
      - **名称**
      - **描述**
   - 

      - **31:3**
      - -
      - -
   - 

      - **2**
      - ENDIAN
      - 如果对IR和DR寄存器发起半字节访问：

         0：先发送低字节，再发送高字节

         1：先发送高字节，再发送低字节
   - 

      - **1**
      - DMAEN
      - 使能DMA读写。当使能芯片内部DMA通道进行数据搬移时，需要先配置DMAEN为1。
   - 

      - **0**
      - BUSY
      - 传输状态指示，RO

         为1表示正在传输出，为0表示空闲。当使用CPU进行数据搬移时，需要先查询该bit是否为0（空闲）；当使用DMA进行数据搬移时，可忽略此bit。

参数控制寄存器CR
^^^^^^^^^^^^^^^^

.. list-table::
   :widths: 12 9 6 12 33

   - 

      - **寄存器**
      - **偏移**
      - **类型**
      - **复位值**
      - **描述**
   - 

      - **CR**
      - 0x0C
      - RW
      - 0
      - 参数控制寄存器

.. list-table::
   :widths: 9 9 9 9 9 9 9 9

   - 

      - **31**
      - **30**
      - **29**
      - **28**
      - **27**
      - **26**
      - **25**
      - **24**
   - 

      - -
      - 
      - 
      - 
      - 
      - 
      - 
      - 
   - 

      - **23**
      - **22**
      - **21**
      - **20**
      - **19**
      - **18**
      - **17**
      - **16**
   - 

      - -
      - 
      - CS0WR0
      - 
      - WRHOLD
      - 
      - 
      - 
   - 

      - **15**
      - **14**
      - **13**
      - **12**
      - **11**
      - **10**
      - **9**
      - **8**
   - 

      - WR1CS1
      - 
      - WCS1_0
      - 
      - 
      - 
      - RDHOLD
      - 
   - 

      - **7**
      - **6**
      - **5**
      - **4**
      - **3**
      - **2**
      - **1**
      - **0**
   - 

      - RDHOLD
      - 
      - 
      - RCS1_0
      - 
      - 
      - 
      - 

.. list-table::
   :widths: 7 15 50

   - 

      - **位域**
      - **名称**
      - **描述**
   - 

      - **31:22**
      - -
      - -
   - 

      - **21:20**
      - CS0WR0
      - 控制从CSn下降沿到WRn下降沿的时间。

         0表示1个时钟周期。时序要求中Tas和Tcsbs由这个寄存器保证
   - 

      - **19:16**
      - WRHOLD
      - 控制WRn低电平的持续时间。

         0表示1个时钟周期。
   - 

      - **15:14**
      - WR1CS1
      - 控制WRn上升沿到CSn上升沿的时间。

         0表示1个时钟周期。
   - 

      - **13:10**
      - WCS1_0
      - 写操作时，控制从CSn上升沿到CSn下除沿的时间。

         0表示1个时钟周期。
   - 

      - **9:5**
      - RDHOLD
      - 控制RD低电平的持续时间。

         0表示1个时钟周期
   - 

      - **4:0**
      - RCS1_0
      - 在读数据操作时，控制从CSn上升沿到下降沿的时间。

         0表示1个时钟周期。

指令寄存器IR
^^^^^^^^^^^^

.. list-table::
   :widths: 12 9 6 12 33

   - 

      - **寄存器**
      - **偏移**
      - **类型**
      - **复位值**
      - **描述**
   - 

      - **IR**
      - 0x10
      - R/W
      - 0
      - 指令寄存器寄存器

.. list-table::
   :widths: 9 9 9 9 9 9 9 9

   - 

      - **31**
      - **30**
      - **29**
      - **28**
      - **27**
      - **26**
      - **25**
      - **24**
   - 

      - IR
      - 
      - 
      - 
      - 
      - 
      - 
      - 
   - 

      - **23**
      - **22**
      - **21**
      - **20**
      - **19**
      - **18**
      - **17**
      - **16**
   - 

      - IR
      - 
      - 
      - 
      - 
      - 
      - 
      - 
   - 

      - **15**
      - **14**
      - **13**
      - **12**
      - **11**
      - **10**
      - **9**
      - **8**
   - 

      - IR
      - 
      - 
      - 
      - 
      - 
      - 
      - 
   - 

      - **7**
      - **6**
      - **5**
      - **4**
      - **3**
      - **2**
      - **1**
      - **0**
   - 

      - IR
      - 
      - 
      - 
      - 
      - 
      - 
      - 

.. list-table::
   :widths: 7 15 50

   - 

      - **位域**
      - **名称**
      - **描述**
   - 

      - **31:0**
      - IR
      - 指令

数据寄存器DR
^^^^^^^^^^^^

.. list-table::
   :widths: 12 9 6 12 33

   - 

      - **寄存器**
      - **偏移**
      - **类型**
      - **复位值**
      - **描述**
   - 

      - **DR**
      - 0x14
      - R/W
      - 0
      - 数据寄存器

.. list-table::
   :widths: 9 9 9 9 9 9 9 9

   - 

      - **31**
      - **30**
      - **29**
      - **28**
      - **27**
      - **26**
      - **25**
      - **24**
   - 

      - DR
      - 
      - 
      - 
      - 
      - 
      - 
      - 
   - 

      - **23**
      - **22**
      - **21**
      - **20**
      - **19**
      - **18**
      - **17**
      - **16**
   - 

      - DR
      - 
      - 
      - 
      - 
      - 
      - 
      - 
   - 

      - **15**
      - **14**
      - **13**
      - **12**
      - **11**
      - **10**
      - **9**
      - **8**
   - 

      - DR
      - 
      - 
      - 
      - 
      - 
      - 
      - 
   - 

      - **7**
      - **6**
      - **5**
      - **4**
      - **3**
      - **2**
      - **1**
      - **0**
   - 

      - DR
      - 
      - 
      - 
      - 
      - 
      - 
      - 

.. list-table::
   :widths: 7 15 50

   - 

      - **位域**
      - **名称**
      - **描述**
   - 

      - **31:0**
      - DR
      - 数据

.. |image1| image:: media/image1.emf
.. |image2| image:: media/image2.emf
